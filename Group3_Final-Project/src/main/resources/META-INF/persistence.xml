<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.2"
             xmlns="http://xmlns.jcp.org/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_2.xsd">
    <persistence-unit name="hello">
        <properties>
            <!-- 필수 속성 -->
            <property name="javax.persistence.jdbc.driver" value="com.mysql.cj.jdbc.Driver"/>
            <property name="javax.persistence.jdbc.user" value="root"/>
            <property name="javax.persistence.jdbc.password" value="root"/>
            <property name="javax.persistence.jdbc.url" value="jdbc:mysql://localhost:3306/memdb?characterEncoding=UTF-8&amp;serverTimezone=UTC"/>
            <property name="hibernate.connection.pool_size" value="20" />
            <!-- 하이버네이트 사용 시 다른 DB에서 MySQL 문법을 사용 가능하도록 변경.-->
            <property name="hibernate.dialect" value="org.hibernate.dialect.MySQL8Dialect"/>
            <!-- 콘솔에 SQL 출력 여부 -->
            <property name="hibernate.show_sql" value="true"/>
            <!-- 가독성 높여주는 formatting 여부 -->
            <property name="hibernate.format_sql" value="true"/>
            <!-- Comment 확인 여부 -->
            <property name="hibernate.use_sql_comments" value="true"/>
            <!-- 쿼리문을 여기 사이즈 만큼에 모아서 한방에 쿼리를 db 에 보냄   -->
            <property name="hibernate.jdbc.batch_size" value="10"/>

            <!-- value="create" 사용시 Drop Table이후 자동으로 Create Table 실행 => 실무 상황에서는 무조건 사용 X -->
            <property name="hibernate.hbm2ddl.auto" value="create" /> <!--//기존에 만들어진 테이블을 사용 수정된 내용이 있을때만 적용-->

        <!-- 실험 용도 .-->

<!--
           <property name="hibernate.format_sql" value="true"/>
            &lt;!&ndash; 쿼리 출력 시 주석(comments)도 함께 출력 &ndash;&gt;
            <property name="hibernate.use_sql_comments" value="true"/>
            &lt;!&ndash; JPA 표준에 맞춘 새로운 키 생성 전략 사용 &ndash;&gt;
            <property name="hibernate.id.new_generator_mappings" value="true"/>
            &lt;!&ndash; 애플리케이션 실행 시점에 데이터베이스 테이블 자동 생성 &ndash;&gt;
            <property name="hibernate.hbm2ddl.auto" value="create"/>
            &lt;!&ndash; 이름 매핑 전략 설정 - 자바의 카멜 표기법을 테이블의 언더스코어 표기법으로 매핑
             ex) lastModifiedDate -> last_modified_date &ndash;&gt;
            <property name="hibernate.ejb.naming_strategy" value="org.hibernate.cfg.ImprovedNamingStrategy"/>
-->




        </properties>
    </persistence-unit>
</persistence>